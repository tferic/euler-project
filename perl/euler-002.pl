=pod
Problem 2: Even Fibonacci numbers
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms.
https://projecteuler.net/problem=2
=cut

use strict;

# Set ceiling to 4'000'000
my $fib_limit = 4000000;

# Initialize start numbers of fibonacci sequence
my @fib = (1, 2);

sub sum_even_fibonacci_numbers {
    my $aref = shift @_;
    my @fib = @$aref;            # Create local copy of fibonacci init array
    my $fib_limit = shift @_;
    my $sum = 0;
 
    while ( $fib[-1] < $fib_limit ) {
        if ( $fib[-1] % 2 == 0 ) {
            $sum += $fib[-1];
        }
        push (@fib, $fib[-1] + $fib[-2]);
    }
    return $sum;
}
  
print"Sum(90):        ".sum_even_fibonacci_numbers(\@fib, 90)."\n";
print"Sum(4'000'000): ".sum_even_fibonacci_numbers(\@fib, $fib_limit)."\n";
