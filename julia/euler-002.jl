#=
Problem 2: Even Fibonacci numbers
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms.
https://projecteuler.net/problem=2
=#

# Set ceiling to 4'000'000
fib_limit = 4e6

# Initialize start numbers of fibonacci sequence
fib = UInt
fib = [1, 2]

function sum_even_fibonacci_numbers(fib, fib_limit)
    sum = 0
    while fib[end] < fib_limit
        if fib[end] % 2 == 0
            sum += fib[end]
        end
        push!(fib, (fib[end-1] + fib[end]) )
    end
    return sum
end
  
println("Sum(90):        ",@time sum_even_fibonacci_numbers(fib, 90))
println("Sum(4'000'000): ",@time sum_even_fibonacci_numbers(fib, fib_limit))
